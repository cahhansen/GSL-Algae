{
    "collab_server" : "",
    "contents" : "#'Import Reflectance Data for calibration\n#'\n#'Reads in Reflectance Data from MySQL Database. It is important that the database have columns for RowID, Blue, Green, Red, NIR, SWIR1, SWIR2,\n#'StationID, ImageDate, Lake, Sensor, and CloudMask. (It may have more columns).\n#'@param database Name of Database\n#'@param password Password for 'root' user\n#'@param tablename Name of table to import data from\n#'@param lake Body of Water of Interest\n#'@return Dataframe of reflectance values\n#'@export\n\n\n#Load data for calibration---------------------------------------------------------------------------------------------\nimportcaldata=function(database,password,tablename,lake){\n  library(RMySQL)\n  library(lubridate)\n  #Return only cloud-free imagery that has been averaged for the imagery that is closest to the sampling date\n  d<-dbDriver(\"MySQL\");\n  con<-dbConnect(d,user='root',password=password,host='localhost');\n  #Select database\n  db=paste0(\"Use \",database,\";\")\n  sqlstmtdb <-dbSendQuery(con,db)\n  query=paste0(\"SELECT * FROM \",tablename,\";\")\n  sqlstmt<-dbSendQuery(con, query)\n  srdata<- dbFetch(sqlstmt, n = -1)\n  srdata=srdata[(srdata$Lake==lake),]\n\n  #Format\n  srdata$Date=as.Date(srdata$ImageDate,format=\"%Y-%m-%d\")\n  srdata$SamplingDate=as.Date(srdata$SamplingDate,format=\"%Y-%m-%d\")\n  srdata$Month=factor(months(srdata$SamplingDate))\n  srdata$Method=factor(srdata$Method)\n  srdata$Sensor=factor(srdata$Sensor)\n  srdata$Organization=factor(srdata$Organization)\n  #Limit to detected chlorophyll (do not include where there were errors or non-detect measurements)\n  srdatapos=srdata[which(srdata$FieldValue>0),]\n  #Generally, interest is in measurements that have been corrected for accessory pigments. This is not the case for Utah Lake, which consists largely of uncorrected measurements (historically)\n  if(lake!='Utah'){\n    srdatapos=srdatapos[which(srdatapos$Method!=\"Chlorophyll-A Uncorrected for pheophytin\"& srdatapos$Method!=\"Water Grab Sampling\" & srdatapos$Method!=\"Chlorophyll-A (Colorimet)\"),]\n  }else{\n    srdatapos=srdatapos[which(srdatapos$Method!=\"Chlorophyll-A (Colorimet), Corrected for pheophytin\"),]\n  }\n  #Limit it to the timewindow\n  srdatapos=srdatapos[which(srdatapos$AbsDiffInDays<=timewindow),]\n  #Eliminate any data where the SWIR data is negative (over-corrected)\n  srdatapos=srdatapos[which(srdatapos$SWIR1>0 & srdatapos$SWIR2>0),]\n  srdatapos$Green_Blue=srdatapos$Green/srdatapos$Blue\n  srdatapos$Red_Blue=srdatapos$Red/srdatapos$Blue\n  srdatapos$Red_Green=srdatapos$Red/srdatapos$Green\n  srdatapos$Red_NIR=srdatapos$Red/srdatapos$NIR\n  srdatapos$Red_SWIR1=srdatapos$Red/srdatapos$SWIR1\n  srdatapos$Green_SWIR1=srdatapos$Green/srdatapos$SWIR1\n  srdatapos$Blue_SWIR1=srdatapos$Blue/srdatapos$SWIR1\n  srdatapos$Red_SWIR2=srdatapos$Red/srdatapos$SWIR2\n  srdatapos$Green_SWIR2=srdatapos$Green/srdatapos$SWIR2\n  srdatapos$Blue_SWIR2=srdatapos$Blue/srdatapos$SWIR2\n  srdatapos$NIR_SWIR1=srdatapos$NIR/srdatapos$SWIR1\n  srdatapos$NIR_SWIR2=srdatapos$NIR/srdatapos$SWIR2\n  srdatapos$NIR_Blue=srdatapos$NIR/srdatapos$Blue\n  srdatapos$NIR_Green=srdatapos$NIR/srdatapos$Green\n  srdatapos$NDVI=(srdatapos$NIR-srdatapos$Red)/(srdatapos$NIR+srdatapos$Red)\n  srdatapos$avgRGB=(srdatapos$Red+srdatapos$Blue+srdatapos$Green)/3\n  srdatapos$avgSWIR=(srdatapos$SWIR1+srdatapos$SWIR2)/2\n  srdatapos$DOY=(yday(srdatapos$Date))\n  #Put columns in order\n  srdatapos=srdatapos[,c(\"Date\",\"Month\",\"DOY\",\"StationID\",\"FieldValue\",\"Blue\",\"Green\",\"Red\",\"NIR\",\"SWIR1\",\"SWIR2\",\"Green_Blue\",\"Red_Blue\",\n                     \"Red_Green\",\"Red_NIR\",\"Red_SWIR1\",\"Green_SWIR1\",\"Blue_SWIR1\",\"Red_SWIR2\",\"Green_SWIR2\",\n                     \"Blue_SWIR2\",\"NIR_SWIR1\",\"NIR_SWIR2\",\"NIR_Blue\",\"NIR_Green\",\"NDVI\",\"avgRGB\",\"avgSWIR\",\"Sensor\",\"Lake\")]\n  return(srdatapos)\n\n}\n",
    "created" : 1479953285779.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1823963781",
    "id" : "988C0820",
    "lastKnownWriteTime" : 1479959936,
    "last_content_update" : 1479959936948,
    "path" : "~/GitHub/GSL-Algae/R_Scripts/ChlModelDevel/R/importcaldata.R",
    "project_path" : "R/importcaldata.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}